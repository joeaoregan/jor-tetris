{"ast":null,"code":"import { COLORS, SHAPES } from './constants';\nexport class Piece {\n  ctx;\n  x;\n  y;\n  color;\n  shape;\n  constructor(ctx) {\n    this.ctx = ctx;\n    this.spawn();\n  }\n  spawn() {\n    const typeId = this.randomizeTetrominoType(COLORS.length - 1);\n    this.shape = SHAPES[typeId];\n    this.color = COLORS[typeId];\n    this.x = typeId === 4 ? 4 : 3;\n    this.y = 0;\n  }\n  draw() {\n    this.ctx.fillStyle = this.color;\n    this.shape.forEach((row, y) => {\n      row.forEach((value, x) => {\n        if (value > 0) {\n          this.ctx.fillRect(this.x + x, this.y + y, 1, 1);\n        }\n      });\n    });\n  }\n  drawNext(ctxNext) {\n    ctxNext.clearRect(0, 0, ctxNext.canvas.width, ctxNext.canvas.height);\n    ctxNext.fillStyle = this.color;\n    this.shape.forEach((row, y) => {\n      row.forEach((value, x) => {\n        if (value > 0) {\n          ctxNext.fillRect(x, y, 1, 1);\n        }\n      });\n    });\n  }\n  move(p) {\n    this.x = p.x;\n    this.y = p.y;\n    this.shape = p.shape;\n  }\n  randomizeTetrominoType(noOfTypes) {\n    return Math.floor(Math.random() * noOfTypes + 1);\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}